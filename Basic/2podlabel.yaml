# --- bu işaretler podlar birbirinden ayrılır.Aynı dosyada birden fazla pod tanımı yapılabilir.
# kubectl apply -f 2podlabel.yaml => podlar yaratılır
# kubectl get pods
# kubectl get pods -l "app" => app anahtarı olan podları getir. valuenin bir önemi yok
# kubectl get pods -l "app" --show-labels => yukardakinin daha detaylısı
# kubectl get pods -l "app=firstapp" --show-labels
# kubectl get pods -l "app=firstapp,tier=frontend" --show-labels => buradaki virgül ve anlamında
# kubectl get pods -l "app in (firstapp)" --show-labels
# kubectl get pods -l "app in (firstapp,secondapp)" --show-labels  => buradaki virgül yada anlamında
# kubectl label pods pod5 denemelabel=deneme => poda label atama
# kubectl label nods minikube denemelabel=deneme
# kubectl describe nodes minikube => yukarda atanan labeli içerde görebiliriz.
# kubectl delete -f 2podlabel.yaml


apiVersion: v1
kind: Pod
metadata:
  name: pod1
  labels:
    app: firstapp
    tier: frontend
    mycluster.local/team: team1
spec:
  containers:
  - name: nginx
    image: nginx:latest
    ports:
    - containerPort: 80
---
apiVersion: v1
kind: Pod
metadata:
  name: pod2
  labels:
    app: firstapp
    tier: frontend
spec:
  containers:
  - name: nginx
    image: nginx:latest
    ports:
    - containerPort: 80
---
apiVersion: v1
kind: Pod
metadata:
  name: pod3
  labels:
    app: firstapp
    tier: backend
spec:
  containers:
  - name: nginx
    image: nginx:latest
    ports:
    - containerPort: 80
---
apiVersion: v1
kind: Pod
metadata:
  name: pod4
  labels:
    app: firstapp
    tier: backend
spec:
  containers:
  - name: nginx
    image: nginx:latest
    ports:
    - containerPort: 80
---
apiVersion: v1
kind: Pod
metadata:
  name: pod5
  labels:
    app: secondapp
    tier: frontend
spec:
  containers:
  - name: nginx
    image: nginx:latest
    ports:
    - containerPort: 80
---
apiVersion: v1
kind: Pod
metadata:
  name: pod6
  labels:
    app: secondapp
    tier: frontend
spec:
  containers:
  - name: nginx
    image: nginx:latest
    ports:
    - containerPort: 80
---
apiVersion: v1
kind: Pod
metadata:
  name: pod7
  labels:
    app: secondapp
    tier: backend
spec:
  containers:
  - name: nginx
    image: nginx:latest
    ports:
    - containerPort: 80
---
apiVersion: v1
kind: Pod
metadata:
  name: pod8
  labels:
    app: secondapp
    tier: backend
spec:
  containers:
  - name: nginx
    image: nginx:latest
    ports:
    - containerPort: 80
---
apiVersion: v1
kind: Pod
metadata:
  name: pod9
  labels:
    team: team1
spec:
  containers:
  - name: nginx
    image: nginx:latest
    ports:
    - containerPort: 80
---
apiVersion: v1
kind: Pod
metadata:
  name: pod10
  labels:
    team: team2
spec:
  containers:
  - name: nginx
    image: nginx:latest
    ports:
    - containerPort: 80
---
apiVersion: v1
kind: Pod
metadata:
  name: pod11
spec:
  containers:
  - name: nginx
    image: nginx:latest
    ports:
    - containerPort: 80
  nodeSelector:
    hddtype: ssd